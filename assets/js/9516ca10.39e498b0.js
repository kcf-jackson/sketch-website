(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{120:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return a})),i.d(n,"metadata",(function(){return o})),i.d(n,"toc",(function(){return l})),i.d(n,"default",(function(){return s}));var t=i(3),g=i(7),r=(i(0),i(172)),a={title:"Game of life",keywords:["agent-based modelling","p5.js"]},o={unversionedId:"game_of_life",id:"game_of_life",isDocsHomePage:!1,title:"Game of life",description:"Created 2021-05-23.",source:"@site/tutorial/game_of_life.md",slug:"/game_of_life",permalink:"/sketch-website/tutorial/game_of_life",editUrl:"https://github.com/kcf-jackson/sketch-website/edit/master/tutorial/tutorial/game_of_life.md",version:"current",sidebar:"tutorial",previous:{title:"Creative coding with tiles",permalink:"/sketch-website/tutorial/8_tiles"},next:{title:"Interact with leaflet map from R",permalink:"/sketch-website/tutorial/leaflet_map"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Step 1 - Draw a 2-dimensional grid of squares",id:"step-1---draw-a-2-dimensional-grid-of-squares",children:[{value:"i. Load libraries",id:"i-load-libraries",children:[]},{value:"ii. Set up relevant variables",id:"ii-set-up-relevant-variables",children:[]},{value:"iii. Draw the grid",id:"iii-draw-the-grid",children:[]}]},{value:"Step 2 - Implement the model that simulates the cell dynamics",id:"step-2---implement-the-model-that-simulates-the-cell-dynamics",children:[]},{value:"Extra - add a button to reset the grid",id:"extra---add-a-button-to-reset-the-grid",children:[]},{value:"Credits / Reference",id:"credits--reference",children:[]}],c={toc:l};function s(e){var n=e.components,i=Object(g.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},c,i,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Created: 2021-04-05. Modified: 2021-05-23."),Object(r.b)("h2",{id:"introduction"},"Introduction"),Object(r.b)("p",null,"In this article, we will implement the ",Object(r.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life"},"game of\nlife"),":"),Object(r.b)("iframe",{srcdoc:'<!DOCTYPE html>\n<html> <head> <meta charset="utf-8"/> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch-js/bin/dist/browser-R_core.js"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.min.js"><\/script> </head> <body> <script src="data:application/javascript;base64,dmFyIHNlcSA9IFIuc2VxCnZhciBydW5pZiA9IFIucnVuaWYKdmFyIHJvdW5kID0gUi5yb3VuZAp2YXIgbWF0cml4ID0gUi5tYXRyaXgyCnZhciBjdyA9IDYwMAp2YXIgY2ggPSA0MDAKdmFyIGdyaWRfc2l6ZSA9IDEwCnZhciBuY29sID0gY3cvZ3JpZF9zaXplCnZhciBucm93ID0gY2gvZ3JpZF9zaXplCnZhciBkYXRhID0gcm91bmQocnVuaWYobnJvdyAqIG5jb2wpKQp2YXIgZ3JpZCA9IG1hdHJpeChkYXRhLCBucm93LCBuY29sKQp2YXIgY291bnROZWlnaGJvcnMgPSBmdW5jdGlvbihtLCBuKSB7CiAgICB2YXIgdG90YWxfc3VtID0gLWdyaWRbbV1bbl0KICAgIHZhciBzID0gc2VxKC0xLCAxKQogICAgZm9yIChsZXQgaSBvZiBzKSB7CiAgICAgICAgZm9yIChsZXQgaiBvZiBzKSB7CiAgICAgICAgICAgIHZhciB3aSA9IChtICsgaSArIG5yb3cpICUgbnJvdwogICAgICAgICAgICB2YXIgd2ogPSAobiArIGogKyBuY29sKSAlIG5jb2wKICAgICAgICAgICAgdmFyIHRvdGFsX3N1bSA9IHRvdGFsX3N1bSArIGdyaWRbd2ldW3dqXQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiB0b3RhbF9zdW0KfQp2YXIgc2V0dXAgPSBmdW5jdGlvbigpIHsKICAgIGZyYW1lUmF0ZSgxNSkKICAgIGNyZWF0ZUNhbnZhcyhjdywgY2gpCiAgICB2YXIgYnV0dG9uID0gY3JlYXRlQnV0dG9uKCJSZXNldCIpCiAgICBidXR0b24ucG9zaXRpb24oOCwgNDEwKQogICAgcmV0dXJuIGJ1dHRvbi5tb3VzZVByZXNzZWQoZnVuY3Rpb24oKSB7CiAgICAgICAgZ3JpZCA9IG1hdHJpeChSLnJvdW5kKHJ1bmlmKG5yb3cgKiBuY29sKSksIG5yb3csIG5jb2wpCiAgICAgICAgcmV0dXJuIGdyaWQKICAgIH0pCn0KdmFyIGRyYXcgPSBmdW5jdGlvbigpIHsKICAgIGJhY2tncm91bmQoMCkKICAgIGZvciAobGV0IGkgb2Ygc2VxKDAsIG5yb3cgLSAxKSkgewogICAgICAgIGZvciAobGV0IGogb2Ygc2VxKDAsIG5jb2wgLSAxKSkgewogICAgICAgICAgICBpZiAoZ3JpZFtpXVtqXSA9PSAxKSB7CiAgICAgICAgICAgICAgICBmaWxsKDI1NSkKICAgICAgICAgICAgICAgIHJlY3QoaiAqIGdyaWRfc2l6ZSwgaSAqIGdyaWRfc2l6ZSwgZ3JpZF9zaXplLCBncmlkX3NpemUpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICB2YXIgbmV4dF9nZW4gPSBtYXRyaXgoMCwgbnJvdywgbmNvbCkKICAgIGZvciAobGV0IGkgb2Ygc2VxKDAsIG5yb3cgLSAxKSkgewogICAgICAgIGZvciAobGV0IGogb2Ygc2VxKDAsIG5jb2wgLSAxKSkgewogICAgICAgICAgICB2YXIgc3RhdGUgPSBncmlkW2ldW2pdCiAgICAgICAgICAgIHZhciBuZWlnaGJvcnMgPSBjb3VudE5laWdoYm9ycyhpLCBqKQogICAgICAgICAgICBpZiAoc3RhdGUgPT0gMCAmJiBuZWlnaGJvcnMgPT0gMykgewogICAgICAgICAgICAgICAgbmV4dF9nZW5baV1bal0gPSAxCiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhdGUgPT0gMSAmJiAobmVpZ2hib3JzIDwgMiB8fCBuZWlnaGJvcnMgPiAzKSkgewogICAgICAgICAgICAgICAgbmV4dF9nZW5baV1bal0gPSAwCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBuZXh0X2dlbltpXVtqXSA9IHN0YXRlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBncmlkID0gbmV4dF9nZW4KICAgIHJldHVybiBudWxsCn0K"><\/script> </body>\n</html>',class:"border-none width-620 height-440"}),Object(r.b)("p",null,"From an implementation point of view, the game of life is simply a grid\nof square cells where the colours of the cells are controlled by a\nsimulation system. This gives us a 2-step plan for the implementation."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Draw a 2-dimensional grid of squares"),Object(r.b)("li",{parentName:"ol"},"Implement the model that simulates the cell dynamics")),Object(r.b)("h2",{id:"step-1---draw-a-2-dimensional-grid-of-squares"},"Step 1 - Draw a 2-dimensional grid of squares"),Object(r.b)("p",null,"We will use the following configurations for the application\n",Object(r.b)("inlineCode",{parentName:"p"},"rules = basic_rules(), deparsers = default_2_deparsers())"),"."),Object(r.b)("h3",{id:"i-load-libraries"},"i. Load libraries"),Object(r.b)("p",null,"First, we load the ",Object(r.b)("inlineCode",{parentName:"p"},"p5")," library and import some R functions from\n",Object(r.b)("inlineCode",{parentName:"p"},"sketch")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sketch"},'#! config(debug = F, rules = basic_rules(), deparsers = default_2_deparsers())\n#! load_library("p5")\n\n# Import R functions implemented by sketch\nseq <- R::seq\nrunif <- R::runif\nround2 <- R::round     # avoid name clash with p5::round\nmatrix <- R::matrix2\n')),Object(r.b)("h3",{id:"ii-set-up-relevant-variables"},"ii. Set up relevant variables"),Object(r.b)("p",null,"Next, we set up some variables for the canvas and the grid."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"We need the width and the height for the canvas, ",Object(r.b)("inlineCode",{parentName:"li"},"cw")," and ",Object(r.b)("inlineCode",{parentName:"li"},"ch"),"."),Object(r.b)("li",{parentName:"ul"},"For the grid, we need the ",Object(r.b)("inlineCode",{parentName:"li"},"grid_size"),", from which we can work out\nthe number of columns and rows of the grid, ",Object(r.b)("inlineCode",{parentName:"li"},"ncol")," and ",Object(r.b)("inlineCode",{parentName:"li"},"nrow"),"."),Object(r.b)("li",{parentName:"ul"},"The grid is represented as a matrix of 0s and 1s representing the\nblack and white colours respectively.")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sketch",metastring:"{10,11,12,13,14,15,16,17,18,19}","{10,11,12,13,14,15,16,17,18,19}":!0},'#! config(debug = F, rules = basic_rules(), deparsers = default_2_deparsers())\n#! load_library("p5")\n\n# Import R functions implemented by sketch.\nseq <- R::seq\nrunif <- R::runif\nround2 <- R::round     # avoid name clash with p5::round\nmatrix <- R::matrix2\n\n# Canvas variables\ncw <- 600\nch <- 400\n\n# Grid variables\ngrid_size <- 10                    # each cell is 10px by 10px large\nncol <- cw / grid_size             # number of columns\nnrow <- ch / grid_size             # number of rows    \ndata <- round(runif(nrow * ncol))  # each entry is 0 or 1\ngrid <- matrix(data, nrow, ncol)   # a matrix of 0s and 1s\n')),Object(r.b)("h3",{id:"iii-draw-the-grid"},"iii. Draw the grid"),Object(r.b)("p",null,"Now, we will draw a grid using nested for-loops. The xy-coordinates of\nthe cell is given by the (i,j)-position of the cell multiplied by the\ngrid size. Note that the grid entry is accessed using ",Object(r.b)("inlineCode",{parentName:"p"},"grid[i][j]"),"\nrather than ",Object(r.b)("inlineCode",{parentName:"p"},"grid[i, j]"),". This is one thing to watch out for when the\n",Object(r.b)("inlineCode",{parentName:"p"},"basic_rules()")," configuration is used."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sketch",metastring:"{20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39}","{20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39}":!0},'#! config(rules = basic_rules(), deparsers = default_2_deparsers())\n#! load_library("p5")\n\n# Import R functions implemented by sketch.\nseq <- R::seq\nrunif <- R::runif\nround2 <- R::round     # avoid name clash with p5::round\nmatrix <- R::matrix2\n\n# Canvas variables\ncw <- 600\nch <- 400\n\n# Grid variables\ngrid_size <- 10                    # each cell is 10px by 10px large\nncol <- cw / grid_size             # number of columns\nnrow <- ch / grid_size             # number of rows    \ndata <- round2(runif(nrow * ncol)) # each entry is 0 or 1\ngrid <- matrix(data, nrow, ncol)   # a matrix of 0s and 1s\n\n# Draw a grid\nsetup <- function() {\n    createCanvas(cw, ch)\n}\n\ndraw <- function() {\n    background(0)   # Black-color background\n    for (i in seq(0, nrow - 1)) {\n        for (j in seq(0, ncol - 1)) {\n            if (grid[i][j] == 1) {\n                fill(255)   # White-color cell\n                rect(x = j * grid_size, \n                     y = i * grid_size, \n                     w = grid_size, \n                     h = grid_size)\n            }\n        }\n    }\n}\n')),Object(r.b)("iframe",{srcdoc:'<!DOCTYPE html>\n<html> <head> <meta charset="utf-8"/> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch-js/bin/dist/browser-R_core.js"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.min.js"><\/script> </head> <body> <script src="data:application/javascript;base64,dmFyIHNlcSA9IFIuc2VxCnZhciBydW5pZiA9IFIucnVuaWYKdmFyIHJvdW5kMiA9IFIucm91bmQKdmFyIG1hdHJpeCA9IFIubWF0cml4Mgp2YXIgY3cgPSA2MDAKdmFyIGNoID0gNDAwCnZhciBncmlkX3NpemUgPSAxMAp2YXIgbmNvbCA9IGN3L2dyaWRfc2l6ZQp2YXIgbnJvdyA9IGNoL2dyaWRfc2l6ZQp2YXIgZGF0YSA9IHJvdW5kMihydW5pZihucm93ICogbmNvbCkpCnZhciBncmlkID0gbWF0cml4KGRhdGEsIG5yb3csIG5jb2wpCnZhciBzZXR1cCA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIGNyZWF0ZUNhbnZhcyhjdywgY2gpCn0KdmFyIGRyYXcgPSBmdW5jdGlvbigpIHsKICAgIGJhY2tncm91bmQoMCkKICAgIGZvciAobGV0IGkgb2Ygc2VxKDAsIG5yb3cgLSAxKSkgewogICAgICAgIGZvciAobGV0IGogb2Ygc2VxKDAsIG5jb2wgLSAxKSkgewogICAgICAgICAgICBpZiAoZ3JpZFtpXVtqXSA9PSAxKSB7CiAgICAgICAgICAgICAgICBmaWxsKDI1NSkKICAgICAgICAgICAgICAgIHJlY3QoaiAqIGdyaWRfc2l6ZSwgaSAqIGdyaWRfc2l6ZSwgZ3JpZF9zaXplLCBncmlkX3NpemUpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"><\/script> </body>\n</html>',class:"border-none width-620 height-440"}),Object(r.b)("h2",{id:"step-2---implement-the-model-that-simulates-the-cell-dynamics"},"Step 2 - Implement the model that simulates the cell dynamics"),Object(r.b)("p",null,"The cell evolution follows the following\n",Object(r.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life#Rules"},"rules"),"\n(from Wikipedia):"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"At each step in time, the following transitions occur:"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"Any live cell with fewer than two live neighbours dies, as if by\nunderpopulation."),Object(r.b)("li",{parentName:"ul"},"Any live cell with two or three live neighbours lives on to the\nnext generation."),Object(r.b)("li",{parentName:"ul"},"Any live cell with more than three live neighbours dies, as if by\noverpopulation."),Object(r.b)("li",{parentName:"ul"},"Any dead cell with exactly three live neighbours becomes a live\ncell, as if by reproduction.")),Object(r.b)("p",{parentName:"blockquote"},"These rules, which compare the behavior of the automaton to real life,\ncan be condensed into the following:"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"Any live cell with two or three live neighbours survives."),Object(r.b)("li",{parentName:"ul"},"Any dead cell with three live neighbours becomes a live cell."),Object(r.b)("li",{parentName:"ul"},"All other live cells die in the next generation. Similarly, all\nother dead cells stay dead."))),Object(r.b)("p",null,"To implement these rules, we need a function ",Object(r.b)("inlineCode",{parentName:"p"},"countNeighbours")," to count\nthe neighbours of a cell and use the count to determine if the cell\nshould be dead or alive (i.e.\xa0equal to 0 or 1)."),Object(r.b)("h4",{id:"the-countneighbours-function"},"The ",Object(r.b)("inlineCode",{parentName:"h4"},"countNeighbours")," function"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-r"},"countNeighbours <- function(m, n) {\n    total_sum <- - grid[m][n]\n    s <- seq(-1, 1)\n    for (i in s) {\n        for (j in s) {\n            wi <- (m + i + nrow) %% nrow    # wrap around edges\n            wj <- (n + j + ncol) %% ncol    # wrap around edges\n            total_sum <- total_sum + grid[wi][wj]\n        }\n    }\n    total_sum\n}\n")),Object(r.b)("p",null,"Notes"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The count (",Object(r.b)("inlineCode",{parentName:"li"},"total_sum"),") starts with the negative of the centre entry\nto avoid handling an exception during the loop."),Object(r.b)("li",{parentName:"ul"},"We allow wrapping around the edges, so the top edge is the neighbour\nof the bottom edge (and similarly the left / right edges are\nneighbours). This is implemented by taking modulus with the number\nof columns / rows.")),Object(r.b)("h4",{id:"change-grid-entry-state-following-the-evolution-rules"},"Change grid entry state following the evolution rules"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sketch",metastring:"{19,20,21,22,23,24,25,26,27,28,29,30,33,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71}","{19,20,21,22,23,24,25,26,27,28,29,30,33,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71}":!0},'#! config(debug = F, rules = basic_rules(), deparsers = default_2_deparsers())\n#! load_library("p5")\n\n# Import R functions implemented by sketch\nseq <- R::seq\nrunif <- R::runif\nround2 <- R::round     # avoid name clash with p5::round\nmatrix <- R::matrix2\n\ncw <- 600\nch <- 400\ngrid_size <- 10\n\nncol <- cw / grid_size\nnrow <- ch / grid_size\ndata <- round2(runif(nrow * ncol))  # 0 or 1\ngrid <- matrix(data, nrow, ncol)\n\ncountNeighbours <- function(m, n) {\n    total_sum <- - grid[m][n]\n    s <- seq(-1, 1)\n    for (i in s) {\n        for (j in s) {\n            wi <- (m + i + nrow) %% nrow    # wrap around edges\n            wj <- (n + j + ncol) %% ncol    # wrap around edges\n            total_sum <- total_sum + grid[wi][wj]\n        }\n    }\n    total_sum\n}\n\nsetup <- function() {\n    frameRate(15)    # Use lower frame rate for better presentation\n    createCanvas(cw, ch)\n}\n\ndraw <- function() {\n    background(0)\n    for (i in seq(0, nrow - 1)) {\n        for (j in seq(0, ncol - 1)) {\n            if (grid[i][j] == 1) {\n                fill(255)\n                rect(j * grid_size, i * grid_size, grid_size, grid_size)\n            }\n        }\n    }\n    \n    # Create a new grid for the next generation\n    next_gen <- matrix(0, nrow, ncol)\n    for (i in seq(0, nrow - 1)) {\n        for (j in seq(0, ncol - 1)) {\n            state <- grid[i][j]\n            neighbors <- countNeighbours(i, j)\n            \n            # Any dead cell with three live neighbours becomes a live cell.\n            if (state == 0 && neighbors == 3) {\n                next_gen[i][j] <- 1\n                \n            # All live cells with < 2 or > 3 live neighbours die.    \n            } else if (state == 1 && (neighbors < 2 || neighbors > 3)) {\n                next_gen[i][j] <- 0\n            \n            # Any live cell with two or three live neighbours survives.\n            # All other dead cells stay dead.    \n            } else {\n                next_gen[i][j] <- state\n            }\n        }\n    }\n    grid <<- next_gen\n    NULL\n}\n')),Object(r.b)("iframe",{srcdoc:'<!DOCTYPE html>\n<html> <head> <meta charset="utf-8"/> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch-js/bin/dist/browser-R_core.js"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.min.js"><\/script> </head> <body> <script src="data:application/javascript;base64,dmFyIHNlcSA9IFIuc2VxCnZhciBydW5pZiA9IFIucnVuaWYKdmFyIHJvdW5kMiA9IFIucm91bmQKdmFyIG1hdHJpeCA9IFIubWF0cml4Mgp2YXIgY3cgPSA2MDAKdmFyIGNoID0gNDAwCnZhciBncmlkX3NpemUgPSAxMAp2YXIgbmNvbCA9IGN3L2dyaWRfc2l6ZQp2YXIgbnJvdyA9IGNoL2dyaWRfc2l6ZQp2YXIgZGF0YSA9IHJvdW5kMihydW5pZihucm93ICogbmNvbCkpCnZhciBncmlkID0gbWF0cml4KGRhdGEsIG5yb3csIG5jb2wpCnZhciBjb3VudE5laWdoYm91cnMgPSBmdW5jdGlvbihtLCBuKSB7CiAgICB2YXIgdG90YWxfc3VtID0gLWdyaWRbbV1bbl0KICAgIHZhciBzID0gc2VxKC0xLCAxKQogICAgZm9yIChsZXQgaSBvZiBzKSB7CiAgICAgICAgZm9yIChsZXQgaiBvZiBzKSB7CiAgICAgICAgICAgIHZhciB3aSA9IChtICsgaSArIG5yb3cpICUgbnJvdwogICAgICAgICAgICB2YXIgd2ogPSAobiArIGogKyBuY29sKSAlIG5jb2wKICAgICAgICAgICAgdmFyIHRvdGFsX3N1bSA9IHRvdGFsX3N1bSArIGdyaWRbd2ldW3dqXQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiB0b3RhbF9zdW0KfQp2YXIgc2V0dXAgPSBmdW5jdGlvbigpIHsKICAgIGZyYW1lUmF0ZSgxNSkKICAgIHJldHVybiBjcmVhdGVDYW52YXMoY3csIGNoKQp9CnZhciBkcmF3ID0gZnVuY3Rpb24oKSB7CiAgICBiYWNrZ3JvdW5kKDApCiAgICBmb3IgKGxldCBpIG9mIHNlcSgwLCBucm93IC0gMSkpIHsKICAgICAgICBmb3IgKGxldCBqIG9mIHNlcSgwLCBuY29sIC0gMSkpIHsKICAgICAgICAgICAgaWYgKGdyaWRbaV1bal0gPT0gMSkgewogICAgICAgICAgICAgICAgZmlsbCgyNTUpCiAgICAgICAgICAgICAgICByZWN0KGogKiBncmlkX3NpemUsIGkgKiBncmlkX3NpemUsIGdyaWRfc2l6ZSwgZ3JpZF9zaXplKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgdmFyIG5leHRfZ2VuID0gbWF0cml4KDAsIG5yb3csIG5jb2wpCiAgICBmb3IgKGxldCBpIG9mIHNlcSgwLCBucm93IC0gMSkpIHsKICAgICAgICBmb3IgKGxldCBqIG9mIHNlcSgwLCBuY29sIC0gMSkpIHsKICAgICAgICAgICAgdmFyIHN0YXRlID0gZ3JpZFtpXVtqXQogICAgICAgICAgICB2YXIgbmVpZ2hib3JzID0gY291bnROZWlnaGJvdXJzKGksIGopCiAgICAgICAgICAgIGlmIChzdGF0ZSA9PSAwICYmIG5laWdoYm9ycyA9PSAzKSB7CiAgICAgICAgICAgICAgICBuZXh0X2dlbltpXVtqXSA9IDEKICAgICAgICAgICAgfSBlbHNlIGlmIChzdGF0ZSA9PSAxICYmIChuZWlnaGJvcnMgPCAyIHx8IG5laWdoYm9ycyA+IDMpKSB7CiAgICAgICAgICAgICAgICBuZXh0X2dlbltpXVtqXSA9IDAKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIG5leHRfZ2VuW2ldW2pdID0gc3RhdGUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIGdyaWQgPSBuZXh0X2dlbgogICAgcmV0dXJuIG51bGwKfQo="><\/script> </body>\n</html>',class:"border-none width-620 height-440"}),Object(r.b)("h2",{id:"extra---add-a-button-to-reset-the-grid"},"Extra - add a button to reset the grid"),Object(r.b)("p",null,"Given the simulation ends in a fairly short time, it would be convenient\nto have a button to restart the simulation. We use the ",Object(r.b)("inlineCode",{parentName:"p"},"createButton"),"\nfunction from p5 to create a button, then position it and make it\nregenerate the grid upon click using the ",Object(r.b)("inlineCode",{parentName:"p"},"position")," and ",Object(r.b)("inlineCode",{parentName:"p"},"mousePressed"),"\nmethods of the button."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sketch",metastring:"{35,36,37,38,39,40}","{35,36,37,38,39,40}":!0},"#! config(debug = F, rules = basic_rules(), deparsers = default_2_deparsers())\n#! load_library(\"p5\")\n\n# Import R functions implemented by sketch\nseq <- R::seq\nrunif <- R::runif\nround2 <- R::round     # avoid name clash with p5::round\nmatrix <- R::matrix2\n\ncw <- 600\nch <- 400\ngrid_size <- 10\n\nncol <- cw / grid_size\nnrow <- ch / grid_size\ndata <- round2(runif(nrow * ncol))  # 0 or 1\ngrid <- matrix(data, nrow, ncol)\n\ncountNeighbours <- function(m, n) {\n    total_sum <- - grid[m][n]\n    s <- seq(-1, 1)\n    for (i in s) {\n        for (j in s) {\n            wi <- (m + i + nrow) %% nrow    # wrap around edges\n            wj <- (n + j + ncol) %% ncol    # wrap around edges\n            total_sum <- total_sum + grid[wi][wj]\n        }\n    }\n    total_sum\n}\n\nsetup <- function() {\n    frameRate(15)\n    createCanvas(cw, ch)\n    button <- createButton('Reset')\n    button$position(8, 410)\n    button$mousePressed(function() {\n        grid <<- matrix(round2(runif(nrow * ncol)), nrow, ncol)\n        grid\n    })\n}\n\ndraw <- function() {\n    background(0)\n    for (i in seq(0, nrow - 1)) {\n        for (j in seq(0, ncol - 1)) {\n            if (grid[i][j] == 1) {\n                fill(255)\n                rect(j * grid_size, i * grid_size, grid_size, grid_size)\n            }\n        }\n    }\n    \n    # Create a new grid for the next generation\n    next_gen <- matrix(0, nrow, ncol)\n    for (i in seq(0, nrow - 1)) {\n        for (j in seq(0, ncol - 1)) {\n            state <- grid[i][j]\n            neighbors <- countNeighbours(i, j)\n            \n            # Any dead cell with three live neighbours becomes a live cell.\n            if (state == 0 && neighbors == 3) {\n                next_gen[i][j] <- 1\n                \n            # All live cells with < 2 or > 3 live neighbours die.    \n            } else if (state == 1 && (neighbors < 2 || neighbors > 3)) {\n                next_gen[i][j] <- 0\n            \n            # Any live cell with two or three live neighbours survives.\n            # All other dead cells stay dead.    \n            } else {\n                next_gen[i][j] <- state\n            }\n        }\n    }\n    grid <<- next_gen\n    NULL\n}\n")),Object(r.b)("iframe",{srcdoc:'<!DOCTYPE html>\n<html> <head> <meta charset="utf-8"/> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch-js/bin/dist/browser-R_core.js"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.min.js"><\/script> </head> <body> <script src="data:application/javascript;base64,dmFyIHNlcSA9IFIuc2VxCnZhciBydW5pZiA9IFIucnVuaWYKdmFyIHJvdW5kMiA9IFIucm91bmQKdmFyIG1hdHJpeCA9IFIubWF0cml4Mgp2YXIgY3cgPSA2MDAKdmFyIGNoID0gNDAwCnZhciBncmlkX3NpemUgPSAxMAp2YXIgbmNvbCA9IGN3L2dyaWRfc2l6ZQp2YXIgbnJvdyA9IGNoL2dyaWRfc2l6ZQp2YXIgZGF0YSA9IHJvdW5kMihydW5pZihucm93ICogbmNvbCkpCnZhciBncmlkID0gbWF0cml4KGRhdGEsIG5yb3csIG5jb2wpCnZhciBjb3VudE5laWdoYm91cnMgPSBmdW5jdGlvbihtLCBuKSB7CiAgICB2YXIgdG90YWxfc3VtID0gLWdyaWRbbV1bbl0KICAgIHZhciBzID0gc2VxKC0xLCAxKQogICAgZm9yIChsZXQgaSBvZiBzKSB7CiAgICAgICAgZm9yIChsZXQgaiBvZiBzKSB7CiAgICAgICAgICAgIHZhciB3aSA9IChtICsgaSArIG5yb3cpICUgbnJvdwogICAgICAgICAgICB2YXIgd2ogPSAobiArIGogKyBuY29sKSAlIG5jb2wKICAgICAgICAgICAgdmFyIHRvdGFsX3N1bSA9IHRvdGFsX3N1bSArIGdyaWRbd2ldW3dqXQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiB0b3RhbF9zdW0KfQp2YXIgc2V0dXAgPSBmdW5jdGlvbigpIHsKICAgIGZyYW1lUmF0ZSgxNSkKICAgIGNyZWF0ZUNhbnZhcyhjdywgY2gpCiAgICB2YXIgYnV0dG9uID0gY3JlYXRlQnV0dG9uKCJSZXNldCIpCiAgICBidXR0b24ucG9zaXRpb24oOCwgNDEwKQogICAgcmV0dXJuIGJ1dHRvbi5tb3VzZVByZXNzZWQoZnVuY3Rpb24oKSB7CiAgICAgICAgZ3JpZCA9IG1hdHJpeChyb3VuZDIocnVuaWYobnJvdyAqIG5jb2wpKSwgbnJvdywgbmNvbCkKICAgICAgICByZXR1cm4gZ3JpZAogICAgfSkKfQp2YXIgZHJhdyA9IGZ1bmN0aW9uKCkgewogICAgYmFja2dyb3VuZCgwKQogICAgZm9yIChsZXQgaSBvZiBzZXEoMCwgbnJvdyAtIDEpKSB7CiAgICAgICAgZm9yIChsZXQgaiBvZiBzZXEoMCwgbmNvbCAtIDEpKSB7CiAgICAgICAgICAgIGlmIChncmlkW2ldW2pdID09IDEpIHsKICAgICAgICAgICAgICAgIGZpbGwoMjU1KQogICAgICAgICAgICAgICAgcmVjdChqICogZ3JpZF9zaXplLCBpICogZ3JpZF9zaXplLCBncmlkX3NpemUsIGdyaWRfc2l6ZSkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIHZhciBuZXh0X2dlbiA9IG1hdHJpeCgwLCBucm93LCBuY29sKQogICAgZm9yIChsZXQgaSBvZiBzZXEoMCwgbnJvdyAtIDEpKSB7CiAgICAgICAgZm9yIChsZXQgaiBvZiBzZXEoMCwgbmNvbCAtIDEpKSB7CiAgICAgICAgICAgIHZhciBzdGF0ZSA9IGdyaWRbaV1bal0KICAgICAgICAgICAgdmFyIG5laWdoYm9ycyA9IGNvdW50TmVpZ2hib3VycyhpLCBqKQogICAgICAgICAgICBpZiAoc3RhdGUgPT0gMCAmJiBuZWlnaGJvcnMgPT0gMykgewogICAgICAgICAgICAgICAgbmV4dF9nZW5baV1bal0gPSAxCiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhdGUgPT0gMSAmJiAobmVpZ2hib3JzIDwgMiB8fCBuZWlnaGJvcnMgPiAzKSkgewogICAgICAgICAgICAgICAgbmV4dF9nZW5baV1bal0gPSAwCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBuZXh0X2dlbltpXVtqXSA9IHN0YXRlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBncmlkID0gbmV4dF9nZW4KICAgIHJldHVybiBudWxsCn0K"><\/script> </body>\n</html>',class:"border-none width-620 height-440"}),Object(r.b)("h2",{id:"credits--reference"},"Credits / Reference"),Object(r.b)("p",null,"I learned the above visualisations from ",Object(r.b)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=FWSR_7kZuYg"},"Daniel\nShiffman"),". Check out the\n",Object(r.b)("a",{parentName:"p",href:"https://thecodingtrain.com/"},"coding train")," for many more fun examples\nwith ",Object(r.b)("inlineCode",{parentName:"p"},"p5.js"),"."),Object(r.b)("link",{href:"../css/docs-styles.css",rel:"stylesheet"}),Object(r.b)("script",{src:"../js/highlight_Rmd.js"}),Object(r.b)("script",null,'highlight_Rmd( "pre code", 1, [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], null, "highlight" )'),Object(r.b)("script",null,'highlight_Rmd( "pre code", 2, [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], null, "highlight" )'),Object(r.b)("script",null,'highlight_Rmd( "pre code", 4, [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], null, "highlight" )'),Object(r.b)("script",null,'highlight_Rmd( "pre code", 5, [34, 35, 36, 37, 38, 39], null, "highlight" )'))}s.isMDXComponent=!0},172:function(e,n,i){"use strict";i.d(n,"a",(function(){return I})),i.d(n,"b",(function(){return C}));var t=i(0),g=i.n(t);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function o(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,g=function(e,n){if(null==e)return{};var i,t,g={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(g[i]=e[i]);return g}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(g[i]=e[i])}return g}var c=g.a.createContext({}),s=function(e){var n=g.a.useContext(c),i=n;return e&&(i="function"==typeof e?e(n):o(o({},n),e)),i},I=function(e){var n=s(e.components);return g.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return g.a.createElement(g.a.Fragment,{},n)}},b=g.a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,r=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),I=s(i),b=t,C=I["".concat(a,".").concat(b)]||I[b]||d[b]||r;return i?g.a.createElement(C,o(o({ref:n},c),{},{components:i})):g.a.createElement(C,o({ref:n},c))}));function C(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=i.length,a=new Array(r);a[0]=b;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:t,a[1]=o;for(var c=2;c<r;c++)a[c]=i[c];return g.a.createElement.apply(null,a)}return g.a.createElement.apply(null,i)}b.displayName="MDXCreateElement"}}]);