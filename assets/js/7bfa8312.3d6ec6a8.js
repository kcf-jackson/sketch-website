(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{113:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return d}));var i=n(3),r=n(7),a=(n(0),n(172)),s={title:"Usage with Shiny"},o={unversionedId:"usage_with_shiny",id:"usage_with_shiny",isDocsHomePage:!1,title:"Usage with Shiny",description:"Using sketch code in Shiny",source:"@site/docs/usage_with_shiny.md",slug:"/usage_with_shiny",permalink:"/sketch-website/docs/usage_with_shiny",editUrl:"https://github.com/kcf-jackson/sketch-website/edit/master/docs/usage_with_shiny.md",version:"current",sidebar:"docs",previous:{title:"Usage with R Markdown documents",permalink:"/sketch-website/docs/usage_with_Rmarkdown"},next:{title:"About",permalink:"/sketch-website/docs/about"}},l=[{value:"Using sketch code in Shiny",id:"using-sketch-code-in-shiny",children:[{value:"A full example",id:"a-full-example",children:[]},{value:"Source code",id:"source-code",children:[]}]}],c={toc:l};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"using-sketch-code-in-shiny"},"Using sketch code in Shiny"),Object(a.b)("p",null,"Use ",Object(a.b)("inlineCode",{parentName:"p"},"compile_r")," to turn a sketch R file into a JavaScript file, copy it into the ",Object(a.b)("inlineCode",{parentName:"p"},"www")," folder of the shiny App, then include the script tag ",Object(a.b)("inlineCode",{parentName:"p"},"tags$script(src = ...)")," in the shiny UI."),Object(a.b)("h3",{id:"a-full-example"},"A full example"),Object(a.b)("p",null,"Here is an example of a Shiny App with and without sketch code."),Object(a.b)("img",{src:"../img/shiny_with_sketch.gif",class:"width-48p"}),Object(a.b)("img",{src:"../img/shiny.gif",class:"width-48p"}),Object(a.b)("p",null,"The advantage of using sketch is that it gives you complete control of the JavaScript behaviour, but the disadvantage is of course that more work is needed to achieve such control."),Object(a.b)("h3",{id:"source-code"},"Source code"),Object(a.b)("h4",{id:"appr"},"app.R"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-r"},'library(shiny)\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n    tags$head(tags$script(src="https://cdn.plot.ly/plotly-latest.min.js")),\n    titlePanel("Old Faithful Geyser Data"),\n    mainPanel(\n        tags$script(src="dom.js"),\n        tags$script(src="slider.js"),\n        tags$script(src="plot.js"),\n    )\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output, session) {\n    # Send data for plotting the histogram at the start\n    session$sendCustomMessage(\n        "hist_data",  \n        list(x = faithful$eruptions, probability = TRUE,\n             xlab = "Duration (minutes)",\n             main = "Geyser eruption duration")\n    )\n    \n    # When a slider value is received, send the density values over\n    observeEvent(input$slider_value, {\n        cat("\\nMessage received\\n")\n        print(input$slider_value)\n        bw_adjust <- as.numeric(input$slider_value$data)\n        dens <- density(faithful$eruptions, adjust = bw_adjust)\n        session$sendCustomMessage("den_data", dens)\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n')),Object(a.b)("h4",{id:"domjs"},"dom.js"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"dom.js")," is provided by the ",Object(a.b)("strong",{parentName:"p"},"sketch")," package, and the file path can be found using ",Object(a.b)("inlineCode",{parentName:"p"},'src("dom")'),". Suppose you are at the Shiny App directory, in which there is an ",Object(a.b)("inlineCode",{parentName:"p"},"www")," folder, then ",Object(a.b)("inlineCode",{parentName:"p"},"dom.js")," can be generated by running ",Object(a.b)("inlineCode",{parentName:"p"},'file.copy(src("dom"), output = "./www/dom.js")'),"."),Object(a.b)("h4",{id:"sliderr"},"slider.R"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-r"},'# Create a bare bone slider\ncontainer <- dom("div", list(id = "slider_1"))\nlabel <- dom("label", list(innerText = "Bandwidth adjustment:"))\nslider <- dom("input", list(type = "range", min = 0.2, max = 2, \n                            value = 1, step = 0.01, style = "width: 480px"))\n\n# Send commands to R when the slider changes\nslider$oninput <- function() {\n    # Use method provided by the Shiny object\n    Shiny$onInputChange("slider_value", list(bw_adjust = self$value))\n}\n\nprint_dom(container, ".col-sm-8")\nprint_dom(label, "#slider_1")\nprint_dom(slider, "#slider_1")\n')),Object(a.b)("p",null,"Generate ",Object(a.b)("inlineCode",{parentName:"p"},"slider.js")," using the following command:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-r"},'compile_r(\n  input = "slider.R", output = "./www/slider.js", \n  rules = basic_rules(),  deparsers = basic_deparsers()\n)\n')),Object(a.b)("h4",{id:"plotr"},"plot.R"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-r"},'hist_container <- dom("div", list(id = "myDiv", style = "width: 500px"))\nprint_dom(hist_container, ".col-sm-8")\n\n# Histogram plot\nhist <- function(msg, at = "myDiv") {\n    declare (data, layout)\n    data <- list(x = msg$x, type = "histogram", \n                 histnorm = ifelse(msg$probability, "probability density", "count"),\n                 marker = list(color = "rgb(200, 200, 200)",\n                               line = list(color = "rgb(0, 0, 0)", width = 1)))\n    layout <- list(title = msg$main, \n                   xaxis = list(title = msg$xlab),\n                   yaxis = list(title = ifelse(msg$probability, "Density", "Frequency")),\n                   showlegend = FALSE)\n    Plotly::newPlot(at, Array(data), layout)\n}\nShiny$addCustomMessageHandler("hist_data", hist)\n\n# Density plot\ntrace_exists <- FALSE\ndensity <- function(msg, at = "myDiv") {\n    declare (data)\n    data <- list(x = msg$x, y = msg$y, type = "scatter", showlegend =  FALSE)\n    if (!trace_exists) {    # Add trace if not existed\n        Plotly::addTraces(at, data)\n        trace_exists <- TRUE\n    } else {                # Update trace if existed\n        Plotly::deleteTraces(at, -1)\n        Plotly::addTraces(at, data)\n    }\n}\nShiny$addCustomMessageHandler("den_data", density)\n')),Object(a.b)("p",null,"Generate ",Object(a.b)("inlineCode",{parentName:"p"},"plot.js")," using the following command:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-r"},'compile_r(\n  input = "plot.R", output = "./www/plot.js", \n  rules = basic_rules(),  deparsers = basic_deparsers()\n)\n')),Object(a.b)("link",{href:"../css/docs-styles.css",rel:"stylesheet"}))}d.isMDXComponent=!0},172:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),b=i,h=p["".concat(s,".").concat(b)]||p[b]||u[b]||a;return n?r.a.createElement(h,o(o({ref:t},c),{},{components:n})):r.a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);