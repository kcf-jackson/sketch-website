(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{172:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,h=p["".concat(s,".").concat(d)]||p[d]||u[d]||c;return n?r.a.createElement(h,a(a({ref:t},b),{},{components:n})):r.a.createElement(h,a({ref:t},b))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,s=new Array(c);s[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var b=2;b<c;b++)s[b]=n[b];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},223:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/websocket_screenshot-b6d16a941a0bdda19cea669f7e4c5c4a.png"},224:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/websocket_hello_world-36d4ef03d50898c99b6bfd422b6d93bc.png"},225:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/websocket_sketch_mode-8620b832a8be3b6ee5e084ecbf64a540.png"},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return l}));var o=n(3),r=n(7),c=(n(0),n(172)),s={title:"WebSocket"},a={unversionedId:"websocket",id:"websocket",isDocsHomePage:!1,title:"WebSocket",description:"Many of the new possibilities brought by the sketch package rely on the use of WebSocket. WebSocket is used to create a new graphics device for real-time plotting in R; it is also used to create an R-scriptable environment so that one can control a user-defined browser session with R commands.",source:"@site/docs/websocket.md",slug:"/websocket",permalink:"/sketch-website/docs/websocket",editUrl:"https://github.com/kcf-jackson/sketch-website/edit/master/docs/websocket.md",version:"current",sidebar:"docs",previous:{title:"Object-Oriented Programming",permalink:"/sketch-website/docs/R6-OOP"},next:{title:"Testing sketch application",permalink:"/sketch-website/docs/testing"}},i=[{value:"1. Start a WebSocket server",id:"1-start-a-websocket-server",children:[]},{value:"2. Start your sketch application",id:"2-start-your-sketch-application",children:[]},{value:"3a. Control the browser",id:"3a-control-the-browser",children:[]},{value:"3b. Control the browser using <code>sketch</code> mode",id:"3b-control-the-browser-using-sketch-mode",children:[]},{value:"4. Stop the WebSocket server",id:"4-stop-the-websocket-server",children:[]}],b={toc:i};function l(e){var t=e.components,s=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},b,s,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Many of the new possibilities brought by the ",Object(c.b)("strong",{parentName:"p"},"sketch")," package rely on the use of WebSocket. WebSocket is used to create a new graphics device for real-time plotting in R; it is also used to create an R-scriptable environment so that one can control a user-defined browser session with R commands. "),Object(c.b)("p",null,"To use WebSocket in your sketch application, you have to include ",Object(c.b)("inlineCode",{parentName:"p"},'#! load_library("websocket")')," in the header of the file, then follow the steps below."),Object(c.b)("h3",{id:"1-start-a-websocket-server"},"1. Start a WebSocket server"),Object(c.b)("p",null,"Start the WebSocket server with:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-{r}"},"conn <- websocket$new()\nconn$startServer()\n")),Object(c.b)("h3",{id:"2-start-your-sketch-application"},"2. Start your sketch application"),Object(c.b)("p",null,"Start your sketch application with the ",Object(c.b)("inlineCode",{parentName:"p"},"source_r")," call. For illustration purposes, we will use a sample app provided by the ",Object(c.b)("inlineCode",{parentName:"p"},"new_app()")," method:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-{r}"},"conn$new_app(debug = TRUE)\n")),Object(c.b)("p",null,"When the connection is established, a message will show at the R console."),Object(c.b)("h4",{id:"screenshot"},"Screenshot"),Object(c.b)("p",null,Object(c.b)("img",{src:n(223).default})),Object(c.b)("h3",{id:"3a-control-the-browser"},"3a. Control the browser"),Object(c.b)("p",null,"Now you can control the browser session using the ",Object(c.b)("inlineCode",{parentName:"p"},"conn$ws$send")," function. The message to be sent to the browser must be a JSON string (to be processed by your application). In the sample app, by default it can accept a string of the form ",Object(c.b)("inlineCode",{parentName:"p"},'{"type": "command", "message": "YOUR COMMAND"}'),'. For example, to ask the browser to print the "Hello World!" string, use '),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},'conn$ws$send(\'{"type": "command", "message": "console.log(\\\'Hello World!\\\')"}\')\n')),Object(c.b)("p",null,"Alternatively, it is more convenient to wrap the above into a function call."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-{r}"},'send_command <- function(x) {\n    message <- list(type = "command", message = x)\n    conn$ws$send(jsonlite::toJSON(message, auto_unbox = TRUE))\n}\nsend_command(\'console.log("Hello World!")\')\n')),Object(c.b)("h4",{id:"screenshot-1"},"Screenshot"),Object(c.b)("p",null,Object(c.b)("img",{src:n(224).default})),Object(c.b)("h3",{id:"3b-control-the-browser-using-sketch-mode"},"3b. Control the browser using ",Object(c.b)("inlineCode",{parentName:"h3"},"sketch")," mode"),Object(c.b)("p",null,"In the above, the command sent to the browser was written in JavaScript. Since ",Object(c.b)("strong",{parentName:"p"},"sketch")," is an R-to-JavaScript transpiler, it is possible to write R commands instead. This functionality is provided by ",Object(c.b)("inlineCode",{parentName:"p"},"conn$sketch_mode()")," which transpiles R commands into JavaScript ones and sends them out to the browser session."),Object(c.b)("h4",{id:"screenshot-2"},"Screenshot"),Object(c.b)("p",null,Object(c.b)("img",{src:n(225).default})),Object(c.b)("h3",{id:"4-stop-the-websocket-server"},"4. Stop the WebSocket server"),Object(c.b)("p",null,"When you finish with the session, use ",Object(c.b)("inlineCode",{parentName:"p"},"conn$stopServer()")," to close the connection."))}l.isMDXComponent=!0}}]);