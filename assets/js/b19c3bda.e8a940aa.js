(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{134:function(V,U,Z){"use strict";Z.r(U),Z.d(U,"frontMatter",(function(){return R})),Z.d(U,"metadata",(function(){return W})),Z.d(U,"toc",(function(){return F})),Z.d(U,"default",(function(){return T}));var d=Z(3),l=Z(7),N=(Z(0),Z(170)),R={title:"Usage with R Markdown documents"},W={unversionedId:"usage_with_Rmarkdown",id:"usage_with_Rmarkdown",isDocsHomePage:!1,title:"Usage with R Markdown documents",description:"Embed a sketch R file in an R Markdown document",source:"@site/docs/usage_with_Rmarkdown.md",slug:"/usage_with_Rmarkdown",permalink:"/sketch-website/docs/usage_with_Rmarkdown",editUrl:"https://github.com/kcf-jackson/sketch-website/edit/master/docs/usage_with_Rmarkdown.md",version:"current",sidebar:"docs",previous:{title:"Customisation",permalink:"/sketch-website/docs/customisation"},next:{title:"Usage with Shiny",permalink:"/sketch-website/docs/usage_with_shiny"}},F=[{value:"Embed a sketch R file in an R Markdown document",id:"embed-a-sketch-r-file-in-an-r-markdown-document",children:[]},{value:"Use the sketch knitr engine",id:"use-the-sketch-knitr-engine",children:[]}],c={toc:F};function T(V){var U=V.components,Z=Object(l.a)(V,["components"]);return Object(N.b)("wrapper",Object(d.a)({},c,Z,{components:U,mdxType:"MDXLayout"}),Object(N.b)("h2",{id:"embed-a-sketch-r-file-in-an-r-markdown-document"},"Embed a sketch R file in an R Markdown document"),Object(N.b)("p",null,"Suppose the sketch R file is ",Object(N.b)("inlineCode",{parentName:"p"},"sketch.R"),", then it can be embedded in an\nRMD file using ",Object(N.b)("inlineCode",{parentName:"p"},"sketch::insert_sketch")," in a code chunk. This is\nparticularly useful when you have a large application."),Object(N.b)("pre",null,Object(N.b)("code",{parentName:"pre",className:"language-r"},'sketch::insert_sketch(file = "sketch.R", style = "width:530px; height:220px; border:none;")\n')),Object(N.b)("iframe",{srcdoc:'<!DOCTYPE html>\n<html> <head> <meta charset="utf-8"/> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch-js/bin/dist/browser-R_core.js"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.min.js"><\/script> </head> <body> <script src="data:application/javascript;base64,"><\/script> </body>\n</html>',class:"width-530 height-220 border-none"}),Object(N.b)("h2",{id:"use-the-sketch-knitr-engine"},"Use the sketch knitr engine"),Object(N.b)("p",null,Object(N.b)("strong",{parentName:"p"},"sketch")," now has a knitr engine! To use it,"),Object(N.b)("ul",null,Object(N.b)("li",{parentName:"ul"},"include ",Object(N.b)("inlineCode",{parentName:"li"},"knitr::knit_engines$set(sketch = sketch::eng_sketch)")," in\nthe setup code chunk, and then"),Object(N.b)("li",{parentName:"ul"},"use ",Object(N.b)("inlineCode",{parentName:"li"},"```{sketch}```")," in place of ",Object(N.b)("inlineCode",{parentName:"li"},"```{r}```"),".")),Object(N.b)("p",null,"Concretely, the code chunks"),Object(N.b)("pre",null,Object(N.b)("code",{parentName:"pre"},'```{r setup, include=FALSE}\nknitr::opts_chunk$set(eval = FALSE)\nknitr::knit_engines$set(sketch = sketch::eng_sketch)\n```\n\n```{sketch, debug = T, style = "width: 100%; height: 90px; border: none;"}\nprint("\'sketch\' has its own knitr engine from version 1.0.5!")\n```\n')),Object(N.b)("p",null,"will produce"),Object(N.b)("iframe",{srcdoc:'<!DOCTYPE html>\n<html> <head> <meta charset="utf-8"/> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch-js/bin/dist/browser-R_core.js"><\/script> </head> <body> <script src="https://cdn.jsdelivr.net/gh/kcf-jackson/sketch/inst/assets/console-log-div.js"><\/script> <script src="data:application/javascript;base64,Ui5wcmludCgiJ3NrZXRjaCcgaGFzIGl0cyBvd24ga25pdHIgZW5naW5lIGZyb20gdmVyc2lvbiAxLjAuNSEiKQo="><\/script> </body>\n</html>',class:"border-none width-full height-90 bg-white rounded-lg"}),Object(N.b)("p",null,"The engine supports the following options:"),Object(N.b)("ul",null,Object(N.b)("li",{parentName:"ul"},Object(N.b)("inlineCode",{parentName:"li"},"rules"),", ",Object(N.b)("inlineCode",{parentName:"li"},"deparsers")," to pass on to ",Object(N.b)("inlineCode",{parentName:"li"},"source_r"),","),Object(N.b)("li",{parentName:"ul"},Object(N.b)("inlineCode",{parentName:"li"},"debug"),", ",Object(N.b)("inlineCode",{parentName:"li"},"asset_tags")," to pass on to ",Object(N.b)("inlineCode",{parentName:"li"},"compile_r"),", and"),Object(N.b)("li",{parentName:"ul"},Object(N.b)("inlineCode",{parentName:"li"},"style")," for styling the iframe, e.g.,\n",Object(N.b)("inlineCode",{parentName:"li"},'style = "width: 100%; border: none;"')," is a common option to use.")),Object(N.b)("link",{href:"../css/docs-styles.css",rel:"stylesheet"}))}T.isMDXComponent=!0},170:function(V,U,Z){"use strict";Z.d(U,"a",(function(){return a})),Z.d(U,"b",(function(){return m}));var d=Z(0),l=Z.n(d);function N(V,U,Z){return U in V?Object.defineProperty(V,U,{value:Z,enumerable:!0,configurable:!0,writable:!0}):V[U]=Z,V}function R(V,U){var Z=Object.keys(V);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(V);U&&(d=d.filter((function(U){return Object.getOwnPropertyDescriptor(V,U).enumerable}))),Z.push.apply(Z,d)}return Z}function W(V){for(var U=1;U<arguments.length;U++){var Z=null!=arguments[U]?arguments[U]:{};U%2?R(Object(Z),!0).forEach((function(U){N(V,U,Z[U])})):Object.getOwnPropertyDescriptors?Object.defineProperties(V,Object.getOwnPropertyDescriptors(Z)):R(Object(Z)).forEach((function(U){Object.defineProperty(V,U,Object.getOwnPropertyDescriptor(Z,U))}))}return V}function F(V,U){if(null==V)return{};var Z,d,l=function(V,U){if(null==V)return{};var Z,d,l={},N=Object.keys(V);for(d=0;d<N.length;d++)Z=N[d],U.indexOf(Z)>=0||(l[Z]=V[Z]);return l}(V,U);if(Object.getOwnPropertySymbols){var N=Object.getOwnPropertySymbols(V);for(d=0;d<N.length;d++)Z=N[d],U.indexOf(Z)>=0||Object.prototype.propertyIsEnumerable.call(V,Z)&&(l[Z]=V[Z])}return l}var c=l.a.createContext({}),T=function(V){var U=l.a.useContext(c),Z=U;return V&&(Z="function"==typeof V?V(U):W(W({},U),V)),Z},a=function(V){var U=T(V.components);return l.a.createElement(c.Provider,{value:U},V.children)},e={inlineCode:"code",wrapper:function(V){var U=V.children;return l.a.createElement(l.a.Fragment,{},U)}},n=l.a.forwardRef((function(V,U){var Z=V.components,d=V.mdxType,N=V.originalType,R=V.parentName,c=F(V,["components","mdxType","originalType","parentName"]),a=T(Z),n=d,m=a["".concat(R,".").concat(n)]||a[n]||e[n]||N;return Z?l.a.createElement(m,W(W({ref:U},c),{},{components:Z})):l.a.createElement(m,W({ref:U},c))}));function m(V,U){var Z=arguments,d=U&&U.mdxType;if("string"==typeof V||d){var N=Z.length,R=new Array(N);R[0]=n;var W={};for(var F in U)hasOwnProperty.call(U,F)&&(W[F]=U[F]);W.originalType=V,W.mdxType="string"==typeof V?V:d,R[1]=W;for(var c=2;c<N;c++)R[c]=Z[c];return l.a.createElement.apply(null,R)}return l.a.createElement.apply(null,Z)}n.displayName="MDXCreateElement"}}]);